{{- if and .Values.webhook.create (not .Values.webhook.certManager.enabled) }}
{{- $secret := lookup "v1" "Secret" .Release.Namespace (printf "%s-secret-%s-%s-%s-wh-%s" .Values.k8sPrefix .Values.customer .Values.purpose (include "external-secrets.fullname" .) .Values.stage) -}}
{{- if not $secret -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{.Values.k8sPrefix}}-secret-{{.Values.customer}}-{{.Values.purpose}}-{{ include "external-secrets.fullname" . }}-wh-{{.Values.stage}}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "external-secrets-webhook.labels" . | nindent 4 }}
    external-secrets.io/component: webhook
  {{- with .Values.webhook.secretAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end -}}
{{- end }}
