{{- if and .Values.webhook.create (not .Values.webhook.certManager.enabled) }}
{{- $secret := lookup "v1" "Secret" (include "external-secrets.namespace" .) (printf "%s-secret-%s-%s-%s-wh-%s" .Values.k8sPrefix .Values.customer .Values.purpose (include "external-secrets.fullname" .) .Values.stage) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{.Values.k8sPrefix}}-secret-{{.Values.customer}}-{{.Values.purpose}}-{{ include "external-secrets.fullname" . }}-wh-{{.Values.stage}}
  namespace: {{ template "external-secrets.namespace" . }}
  labels:
    {{- include "external-secrets-webhook.labels" . | nindent 4 }}
    external-secrets.io/component: webhook
  {{- with .Values.webhook.secretAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- if $secret }}
data:
  ca.crt: {{ index $secret.data "ca.crt" }}
  ca.key: {{ index $secret.data "ca.key" }}
  tls.crt: {{ index $secret.data "tls.crt" }}
  tls.key: {{ index $secret.data "tls.key" }}
{{- else }}
# data: {} # Injected by external-secrets-webhook
{{- end }}
{{- end }}
