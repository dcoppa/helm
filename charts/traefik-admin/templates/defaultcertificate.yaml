{{- if not (hasSuffix "d" .Values.k8sPrefix) }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  labels:
  {{- include "traefik.labels" . | nindent 4 }}
  name: {{.Values.k8sPrefix}}-es-{{.Values.customer}}-{{.Values.purpose}}-{{ template "traefik.fullname" . }}-certs-{{.Values.stage}}
  namespace: {{.Values.k8sPrefix}}-ns-{{.Values.customer}}-{{.Values.purpose}}-{{ template "traefik.fullname" . }}-{{.Values.stage}}
spec:
  refreshInterval: 12h
  secretStoreRef:
    name: {{.Values.k8sPrefix}}-css-{{.Values.customer}}-{{.Values.purpose}}-aws-secretsmanager-{{.Values.stage}}
    kind: ClusterSecretStore
  target:
    name: {{.Values.k8sPrefix}}-secret-{{.Values.customer}}-{{.Values.purpose}}-{{ template "traefik.fullname" . }}-certs-{{.Values.stage}}
    creationPolicy: Owner
    template:
      metadata:
        labels:
          {{- include "traefik.labels" . | nindent 10 }}
      type: kubernetes.io/tls
  data:
  - secretKey: ca.crt
    remoteRef:
      key: {{.Values.awsAccount}}-secret-{{.Values.customer}}-{{.Values.purpose}}-{{ template "traefik.fullname" . }}-{{.Values.stage}}
      property: ca.crt
  - secretKey: tls.crt
    remoteRef:
      key: {{.Values.awsAccount}}-secret-{{.Values.customer}}-{{.Values.purpose}}-{{ template "traefik.fullname" . }}-{{.Values.stage}}
      property: tls.crt
  - secretKey: tls.key
    remoteRef:
      key: {{.Values.awsAccount}}-secret-{{.Values.customer}}-{{.Values.purpose}}-{{ template "traefik.fullname" . }}-{{.Values.stage}}
      property: tls.key
{{- end }}
