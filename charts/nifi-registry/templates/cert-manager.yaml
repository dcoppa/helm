{{ if .Values.certManager.enabled }}
{{ if ne .Values.replicaCount 1.0 }}
{{ fail "cert-manager only supported for a single replica" }}
{{/* if gt .Values.replicaCount 1 */}}{{ end }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{.Values.k8sPrefix}}-certificate-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-{{.Values.stage}}-0
  namespace: {{ .Release.Namespace }}
spec:
  commonName: {{.Values.k8sPrefix}}-sts-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" . }}-{{.Values.stage}}-0.{{.Values.k8sPrefix}}-svc-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" . }}-headless-{{.Values.stage}}
  duration: 262800h0m0s
  subject:
    organizationalUnits:
    - NiFi Registry
  secretName: {{.Values.k8sPrefix}}-secret-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-0-certs-{{.Values.stage}}
  privateKey:
    rotationPolicy: Always
  usages:
    - digital signature
    - content commitment
    - key encipherment
    - data encipherment
    - key agreement
    - server auth
    - client auth
  dnsNames:
{{ toYaml $.Values.certManager.additionalDnsNames | indent 4 }}
    - {{.Values.k8sPrefix}}-svc-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-{{.Values.stage}}
    - {{.Values.k8sPrefix}}-svc-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-{{.Values.stage}}.{{ .Release.Namespace }}
    - {{.Values.k8sPrefix}}-svc-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-{{.Values.stage}}.{{ .Release.Namespace }}.svc
    - {{.Values.k8sPrefix}}-svc-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-{{.Values.stage}}.{{ .Release.Namespace }}.svc.{{ .Values.certManager.clusterDomain }}
    - {{.Values.k8sPrefix}}-sts-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-{{.Values.stage}}-0.{{.Values.k8sPrefix}}-svc-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-headless-{{.Values.stage}}
    - {{.Values.k8sPrefix}}-sts-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-{{.Values.stage}}-0.{{.Values.k8sPrefix}}-svc-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-headless-{{.Values.stage}}.{{ .Release.Namespace }}
    - {{.Values.k8sPrefix}}-sts-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-{{.Values.stage}}-0.{{.Values.k8sPrefix}}-svc-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-headless-{{.Values.stage}}.{{ .Release.Namespace }}.svc
    - {{.Values.k8sPrefix}}-sts-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-{{.Values.stage}}-0.{{.Values.k8sPrefix}}-svc-{{.Values.customer}}-{{.Values.purpose}}-{{ template "nifi-registry.fullname" $ }}-headless-{{.Values.stage}}.{{ .Release.Namespace }}.svc.{{ .Values.certManager.clusterDomain }}
  issuerRef:
    name: {{.Values.k8sPrefix}}-clusterissuer-{{.Values.customer}}-{{.Values.purpose}}-nifi-ca-{{.Values.stage}}
    kind: ClusterIssuer
{{/* if .Values.certManager.enabled */}}{{ end }}
