apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{.Values.k8sPrefix}}-externalsecret-{{.Values.customer}}-{{.Values.purpose}}-{{ include "newrelic.common.naming.fullname" . }}-license-{{.Values.stage}}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "newrelic.common.labels" . | nindent 4 }}
spec:
  data:
  - remoteRef:
      key: {{.Values.awsAccount}}-secret-{{.Values.customer}}-{{.Values.purpose}}-nr-licensekey-{{.Values.stage}}
      property: {{ include "newrelic.common.license.secretKeyName" . }}
    secretKey: key
  refreshInterval: 12h
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{.Values.k8sPrefix}}-clustersecretstore-{{.Values.customer}}-{{.Values.purpose}}-aws-secretsmanager-{{.Values.stage}}
  target:
    creationPolicy: Owner
    name: {{ include "newrelic.common.license.secretName" . }}
    template:
      data:
        {{ include "newrelic.common.license.secretKeyName" . }}: {{ (printf "\"{{ .key }}\"") }}
      metadata:
        labels:
          {{- include "newrelic.common.labels" . | nindent 10 }}
      engineVersion: v2
      type: Opaque
